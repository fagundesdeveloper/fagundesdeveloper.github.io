{"version":3,"sources":["reportWebVitals.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","pages/merkle/index.jsx","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","pages/mint/index.jsx","pages/error/index.jsx","router/index.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","console","log","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","require","MerkleTree","Array","useParams","fetchDataFailed","fetchData","dispatch","getState","methods","call","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","a","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","width","backgroundColor","margin","src","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","receipt","claimNFTs","ErrorPage","useRouteError","id","statusText","message","routes","createBrowserRouter","path","element","errorElement","children","router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9513f728.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n\n  console.log(action)\n\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n      break;\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n      break;\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n      break;\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n      break;\n    case \"SET_INITIAL_STATE\":\n      // console.log('SET_INITIAL_STATE@STATE', {\n      //   ...state,\n      //   smartContract: action.payload?.smartContract || action.payload || null,\n      // }, action.payload)\n\n      return {\n        ...state,\n        smartContract: action.payload?.smartContract || action.payload || null,\n      };\n      break;\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\";\n\nconst { MerkleTree } = require('merkletreejs');\nconst keccak256 = require('keccak256');\nvar proofTobeSended = Array();\n\n// Assets\nimport MerkleWallets from \"../../merkle/merkleWallets.json\";\n\nfunction validate(wallet) {\n    const whitelistAddresses = MerkleWallets.wallets;\n    const addrUserLogged = wallet;\n    const leafNodes = whitelistAddresses.map(addr => keccak256(addr));\n    const merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n    const merkleProof = merkleTree.getHexProof(keccak256(addrUserLogged))\n    merkleProof.map((addr) => proofTobeSended.push(addr));\n    console.log(proofTobeSended);\n\n    return proofTobeSended;\n}\n\nexport default () => {\n    const params = useParams()\n\n    return <>\n        {\n            // params?.wallet ?\n            //     validate(params.wallet).map(resp => (\n            //         <div>  \n            //             {resp}\n            //         </div>\n            //     ))\n            //     :\n            //     MerkleWallets.wallets.map(wallet => (\n            //         <div>\n            //             {wallet}\n            //         </div>\n            //     ))\n        }\n\n    </>\n}","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nimport CONFIG from \"./config.json\"\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n\nexport const setInitialState = async () => {\n  const abiResponse = await fetch(\"/config/abi.json\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  });\n\n  if (!abiResponse) return;\n\n  const abiResponseJSON = await abiResponse?.json()\n\n  const SmartContractObj = new Web3EthContract(\n    abiResponseJSON,\n    CONFIG.CONTRACT_ADDRESS\n  );\n\n  // console.log('setInitialState@action', {\n  //   type: 'SET_INITIAL_STATE',\n  //   payload: { smartContract: SmartContractObj }\n  // })\n\n  return { type: 'SET_INITIAL_STATE', payload: SmartContractObj }\n}","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: rgba(31, 5, 42);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: left;\n  @media(max-width: 900px){\n    width: 100% !important;\n    margin: auto !important;\n  }\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\n// Redux\nimport { connect, setInitialState } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\n\n// Merkle Wallets\nimport MerkleWallets from \"../../merkle/merkleWallets.json\";\n\n// Styles\nimport * as s from \"../../styles/globalStyles\";\n\nconst { MerkleTree } = require('merkletreejs');\nconst keccak256 = require('keccak256');\nvar proofTobeSended = Array();\n\nconst truncate = (input, len) =>\n    input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`  \n  border: none;\n  background-color: #a4002d;\n  padding: 2rem 4rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #acf9ef;  \n\n  margin-top: 2rem;\n  cursor: pointer; \n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\n\nexport const StyledImg = styled.img`\n  /* box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7); */\n  /* border: 4px dashed var(--secondary); */\n  /* background-color: var(--accent); */\n  /* border-radius: 100%; */\n  width: 180px;\n  margin-bottom: 4rem;\n  /* @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  } */\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [claimingNft, setClaimingNft] = useState(false);\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        SCAN_LINK: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n        NFT_NAME: \"\",\n        SYMBOL: \"\",\n        MAX_SUPPLY: 1,\n        WEI_COST: 0,\n        DISPLAY_COST: 0,\n        GAS_LIMIT: 0,\n        MARKETPLACE: \"\",\n        MARKETPLACE_LINK: \"\",\n        SHOW_BACKGROUND: false,\n    });\n\n    async function getProofToSend(wallet) {\n        const whitelistAddresses = MerkleWallets.wallets;\n        const addrUserLogged = wallet;\n        const leafNodes = whitelistAddresses.map(addr => keccak256(addr));\n        const merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n        const merkleProof = merkleTree.getHexProof(keccak256(addrUserLogged))\n        merkleProof.map((addr) => proofTobeSended.push(addr));\n    }\n\n    const claimNFTs = () => {\n        // getProofToSend(blockchain.account);\n\n        let cost = CONFIG.WEI_COST;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        console.log(\"Cost: \", totalCostWei);\n        console.log(\"Gas limit: \", totalGasLimit);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n        blockchain.smartContract.methods\n            .mint(mintAmount)\n            .send({\n                gasLimit: String(totalGasLimit),\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: blockchain.account,\n                value: totalCostWei,\n            })\n            .once(\"error\", (err) => {\n                console.log(err);\n                setFeedback(\"Sorry, something went wrong please try again later.\");\n                setClaimingNft(false);\n            })\n            .then((receipt) => {\n                console.log(receipt);\n                setFeedback(\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n                dispatch(fetchData(blockchain.account));\n            });\n    };\n\n    const decrementMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const incrementMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > 10) {\n            newMintAmount = 10;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account));\n        }\n    };\n\n    const getConfig = async () => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n    useEffect(() => {\n        getConfig();\n    }, []);\n\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return (\n        <s.Screen>\n            <s.Container\n                flex={1}\n                ai={\"center\"}\n                image={\"https://mylandmetaverse.io/demo/dist/2aaba248e2fdcf5fe351.jpg\"}\n                style={{ padding: 24 }}\n            >\n\n\n                <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n\n                    <s.Container\n                        flex={'none'}\n                        jc={\"center\"}\n                        ai={\"center\"}\n                        style={{\n                            width: '50%',\n                            backgroundColor: \"#1f052a97\",\n                            padding: 12,\n                            margin: '0 auto'\n                        }}\n                    >\n                        <StyledImg src=\"https://mylandmetaverse.io/demo/src/assets/imgs/logo-footer.png\"></StyledImg>\n\n                        <s.TextTitle\n                            style={{\n                                textAlign: \"center\",\n                                fontSize: 50,\n                                fontWeight: \"bold\",\n                                color: \"var(--accent-text)\",\n                            }}\n                        >\n                            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                        </s.TextTitle>\n\n                        <s.TextDescription\n                            style={{\n                                textAlign: \"center\",\n                                color: \"var(--primary-text)\",\n                            }}\n                        >\n                            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                            </StyledLink>\n                        </s.TextDescription>\n\n                        <s.SpacerSmall />\n\n                        {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                            <>\n                                <s.TextTitle\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    The sale has ended.\n                                </s.TextTitle>\n                                <s.TextDescription\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    You can still find {CONFIG.NFT_NAME} on\n                                </s.TextDescription>\n                                <s.SpacerSmall />\n                                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                                    {CONFIG.MARKETPLACE}\n                                </StyledLink>\n                            </>\n                        ) : (\n                            <>\n                                <s.TextTitle\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                                    {CONFIG.NETWORK.SYMBOL}.\n                                </s.TextTitle>\n                                <s.SpacerXSmall />\n                                <s.TextDescription\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    Excluding gas fees.\n                                </s.TextDescription>\n                                <s.SpacerSmall />\n                                {blockchain.account === \"\" ||\n                                    blockchain.smartContract === null ? (\n                                    <s.Container ai={\"center\"} jc={\"center\"}>\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            Connect to the {CONFIG.NETWORK.NAME} network\n                                        </s.TextDescription>\n                                        <s.SpacerSmall />\n                                        <StyledButton\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                dispatch(connect());\n                                                getData();\n                                            }}\n                                        >\n                                            CONNECT\n                                        </StyledButton>\n                                        {blockchain.errorMsg !== \"\" ? (\n                                            <>\n                                                <s.SpacerSmall />\n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    {blockchain.errorMsg}\n                                                </s.TextDescription>\n                                            </>\n                                        ) : null}\n                                    </s.Container>\n                                ) : (\n                                    <>\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            {feedback}\n                                        </s.TextDescription>\n                                        <s.SpacerMedium />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <StyledRoundButton\n                                                style={{ lineHeight: 0.4 }}\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    decrementMintAmount();\n                                                }}\n                                            >\n                                                -\n                                            </StyledRoundButton>\n                                            <s.SpacerMedium />\n                                            <s.TextDescription\n                                                style={{\n                                                    textAlign: \"center\",\n                                                    color: \"var(--accent-text)\",\n                                                }}\n                                            >\n                                                {mintAmount}\n                                            </s.TextDescription>\n                                            <s.SpacerMedium />\n                                            <StyledRoundButton\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    incrementMintAmount();\n                                                }}\n                                            >\n                                                +\n                                            </StyledRoundButton>\n                                        </s.Container>\n                                        <s.SpacerSmall />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <StyledButton\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    claimNFTs();\n                                                    getData();\n                                                }}\n                                            >\n                                                {claimingNft ? \"BUSY\" : \"BUY\"}\n                                            </StyledButton>\n                                        </s.Container>\n                                    </>\n                                )}\n                            </>\n                        )}\n\n                        <s.SpacerMedium />\n\n                    </s.Container>\n\n                    <s.SpacerLarge />\n\n                </ResponsiveWrapper>\n\n            </s.Container>\n\n        </s.Screen>\n    );\n}\n\nexport default App;\n","import { useRouteError } from \"react-router-dom\";\n\nexport default function ErrorPage() {\n    const error = useRouteError();\n    console.error(error);\n\n    return (\n        <div id=\"error-page\">\n            <h1>Oops!</h1>\n            <p>Sorry, an unexpected error has occurred.</p>\n            <p>\n                <i>{error.statusText || error.message}</i>\n            </p>\n        </div>\n    );\n}","import React from \"react\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\n// Pages\nimport MerklePage from \"../pages/merkle\";\nimport MintPage from \"../pages/mint\";\nimport ErrorPageHandler from \"../pages/error\";\n\nexport default () => {\n    const routes = createBrowserRouter([\n        {\n            path: \"/\",\n            element: <MintPage />,\n            errorElement: <ErrorPageHandler />,\n\n        },\n        {\n            path: \"/merkle\",\n            element: <MerklePage />,\n            errorElement: <ErrorPageHandler />,\n            children: [\n                {\n                    path: \":wallet\",\n                    element: <MerklePage />,\n                    errorElement: <ErrorPageHandler />,\n                }\n            ]\n        }\n    ])\n\n    return <RouterProvider router={routes} />\n}","import React from \"react\";\n\n// Routes\nimport Routes from \"./router\"\n\nfunction App() {\n  return <Routes />\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Redux\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n// Application\nimport App from \"./App\";\n\n\n// Global Styles\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}