{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","SpacerSmall","styled","div","image","TextDescription","flex","fd","jc","ai","test","p","button","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","claimNFTs","totalCostWei","String","contractMethod","mint","options","to","from","value","estimateGas","then","gas","gasLimit","catch","err","parseInt","send","once","receipt","getData","getConfig","config","useEffect","className","href","target","length","substring","onClick","e","preventDefault","style","textAlign","color","textShadow","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gwBAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCPP,EAAe,CACnBC,SAAS,EACTU,YAAa,EACbC,KAAM,EACNC,OAAO,EACPR,SAAU,IAiCGS,EA9BK,WAAmC,IAAlCP,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTY,OAAO,EACPR,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTU,YAAaH,EAAOE,QAAQC,YAE5BE,OAAO,EACPR,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFL,GADL,IAEEC,SAAS,EACTY,OAAO,EACPR,SAAUG,EAAOE,UAErB,QACE,OAAOH,IC7BPQ,EAAcC,YAAgB,CAClCC,WAAYX,EACZY,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCE5BK,EAAkB,SAAChB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAiB,EAAY,WACvB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLnB,KAAM,uBAmBD,kBAGqBe,EACrBM,WACAb,WAAWd,cAAc4B,QAAQpB,cACjCqB,OANA,OAGCrB,EAHD,OAYHiB,EA1BG,CACLnB,KAAM,qBACNC,QAyBqB,CACfC,iBAdD,gDAmBHsB,QAAQC,IAAR,MACAN,EAASF,EAAgB,uCApBtB,yDAAP,uDCLIS,EAAgB,SAACzB,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAWA0B,EAAU,WACrB,8CAAO,WAAOR,GAAP,+BAAAC,EAAA,6DACLD,EA5BK,CACLnB,KAAM,uBA0BD,SAEqB4B,MAAM,mBAAoB,CAClDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBALP,cAECC,EAFD,gBAQaA,EAAYC,OARzB,cAQCC,EARD,gBASwBL,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAZP,cASCI,EATD,iBAegBA,EAAeF,OAf/B,WAeCG,EAfD,SAgBgBC,OAAbC,EAhBH,EAgBGA,WACoBA,GAAYA,EAASC,YAjB5C,wBAmBHC,IAAgBC,YAAYH,GACxB1C,EAAO,IAAI8C,IAAKJ,GApBjB,oBAsBsBA,EAASK,QAAQ,CACtCC,OAAQ,wBAvBT,eAsBKC,EAtBL,iBAyBuBP,EAASK,QAAQ,CACvCC,OAAQ,gBA1BT,gBA4BgBR,EAAOU,QAAQC,IACxBC,EAAmB,IAAIR,IAC3BN,EACAE,EAAOa,kBAET7B,EAtDD,CACLnB,KAAM,qBACNC,QAqDuB,CACbR,QAASmD,EAAS,GAClBlD,cAAeqD,EACfpD,KAAMA,KAIV0C,EAASY,GAAG,mBAAmB,SAACL,GAC9BzB,EAAS+B,EAAcN,EAAS,QAElCP,EAASY,GAAG,gBAAgB,WAC1Bb,OAAOe,SAASC,aAIlBjC,EAASO,EAAc,qBAAD,OAAsBS,EAAOU,QAAQQ,KAArC,OAjDvB,mDAoDDlC,EAASO,EAAc,0BApDtB,gCAuDHP,EAASO,EAAc,sBAvDpB,2DAAP,uDA4DWwB,EAAgB,SAACzD,GAC5B,8CAAO,WAAO0B,GAAP,SAAAC,EAAA,sDACLD,EArEK,CACLnB,KAAM,iBACNC,QAmE8B,CAAER,QAASA,KACzC0B,EAASD,KAFJ,2CAAP,uD,QC1EWoC,GAlBSC,IAAOC,IAAV,yOAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAUpCF,IAAOC,IAAV,2DAMED,IAAOC,IAAV,8DA4CXE,GAtCeH,IAAOC,IAAV,6DAMED,IAAOC,IAAV,6DAMCD,IAAOC,IAAV,iQAEZ,gBAAGG,EAAH,EAAGA,KAAH,OAAeA,GAAc,KACnB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YACtB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAC3B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAClB,qBAAGC,KAAmB,OAAS,UAE/B,gBAAGN,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAKvCF,IAAOS,EAAV,yHAOMT,IAAOS,EAAV,oGAMMT,IAAOS,EAAV,qG,GAMGT,IAAOC,IAAV,iE,aC5DAD,IAAOU,OAAV,2gBA8SVC,MA1Rf,WACE,IAxBgBC,EAAOC,EAwBjBjD,EAAWkD,cACX7D,EAAa8D,aAAY,SAACxE,GAAD,OAAWA,EAAMU,cAEhD,GADa8D,aAAY,SAACxE,GAAD,OAAWA,EAAMW,QACJ8D,oBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA6BN,mBAAS,CACpCvB,iBAAkB,GAClB8B,UAAW,GACXjC,QAAS,CACPQ,KAAM,GACN0B,OAAQ,GACRjC,GAAI,GAENkC,SAAU,GACVD,OAAQ,GACRE,WAAY,EACZC,SAAU,EACVC,aAAc,EACdC,UAAW,EACXC,YAAa,GACbC,iBAAkB,GAClBC,iBAAiB,IAhBnB,mBAAOpD,EAAP,KAAeqD,EAAf,KAmBMC,EAAS,uCAAG,oCAAArE,EAAA,6DACZjB,EAAOgC,EAAO+C,SACdQ,EAAeC,OAAOxF,EAAOyE,GAIjCpD,QAAQC,IAAI,SAAUiE,GACtBf,EAAY,gBAAD,OAAiBxC,EAAO6C,SAAxB,QACXP,GAAe,GAETmB,EAAiBpF,EAAWd,cAAc4B,QAAQuE,KAAKjB,GAEzDkB,EAAU,CACZC,GAAI5D,EAAOa,iBACXgD,KAAMxF,EAAWf,QACjBwG,MAAOP,GAfO,SAkBVE,EACHM,YAAYJ,GACZK,MAAK,SAACC,GAGL,OAFAC,EAAW,IAAMD,EACjB5E,QAAQC,IAAI,iBAAkB2E,GACvBC,KAERC,OAAM,SAACC,GAEN,OADA/E,QAAQC,IAAI8E,GACiBF,EAAX,GAAdzB,EAAoCzC,EAAOiD,UACpCjD,EAAOiD,UAAY,KAAUR,EAAa,MA5BzC,OAgChBkB,EAAO,2BACFA,GADE,IAELM,IAAKI,SAASH,KAGhB7E,QAAQC,IAAIqE,GAEZF,EACGa,KAAKX,GACLY,KAAK,SAAS,SAACH,GACd/E,QAAQC,IAAI8E,GACZ5B,EAAY,kDACZF,GAAe,MAEhB0B,MAAK,SAACQ,GACLnF,QAAQC,IAAIkF,GACZhC,EAAY,GAAD,OACNxC,EAAO6C,SADD,gDAGXP,GAAe,GACftD,EAASD,EAAUV,EAAWf,aApDlB,4CAAH,qDAwETmH,EAAU,WACa,KAAvBpG,EAAWf,SAA+C,OAA7Be,EAAWd,eAC1CyB,EAASD,EAAUV,EAAWf,WAI5BoH,EAAS,uCAAG,8BAAAzF,EAAA,sEACaQ,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJI,cACVI,EADU,gBAOKA,EAAeF,OAPpB,OAOV8E,EAPU,OAQhBtB,EAAWsB,GARK,2CAAH,qDAmBf,OARAC,qBAAU,WACRF,MACC,IAEHE,qBAAU,WACRH,MACC,CAACpG,EAAWf,UAGb,qBAAKuH,UAAU,YAAf,SACE,qBAAKA,UAAU,iEAAf,SACE,8BACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,uBAAf,UACG,IACD,mBAAGC,KAAK,6BAA6BC,OAAO,SAA5C,SACE,oBAAIF,UAAU,gDAAd,4BAIAxG,EAAWf,QAWX,oBAAIuH,UAAU,iCAAd,UAzKE7C,EA0KU3D,EAAWf,QA1Kd2E,EA0KuB,GAzK9CD,EAAMgD,OAAS/C,EAAf,UAAwBD,EAAMiD,UAAU,EAAGhD,GAA3C,OAAuDD,KA8JzC,wBACEkD,QAAS,SAACC,GACRA,EAAEC,iBACFpG,EAASQ,KACTiF,KAJJ,SAOE,oBAAII,UAAU,wBAAd,iCASmB,KAAxBxG,EAAWZ,SACF,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE4H,MAAO,CACLC,UAAW,SACXC,MAAO,sBAHX,SAMGlH,EAAWZ,cAGd,KACZ,qBAAKoH,UAAU,sBAAf,SACE,gCACE,gCACE,sBAAKA,UAAU,OAAf,UACE,mBAAGC,KAAK,IAAR,SACE,oBAAID,UAAU,gDAAd,iCAIF,oBACEA,UAAU,sDACVQ,MAAO,CAAEG,WAAY,8BAFvB,oBAMA,oBACEX,UAAU,uEACVQ,MAAO,CAAEG,WAAY,8BAFvB,iCAOF,sBAAKX,UAAU,eAAf,UACE,qBAAIA,UAAU,gCAAd,yBACe,OAEf,oBAAIA,UAAU,gCAAd,gEAKF,sBAAKA,UAAU,uEAAf,UACE,wBACEA,UAAU,0EACVY,SAAUpD,EAAc,EAAI,EAC5B6C,QAAS,SAACC,GACRA,EAAEC,iBAvHI,WAC1B,IAAIM,EAAgBjD,EAAa,EAC7BiD,EAAgB,IAClBA,EAAgB,GAElBhD,EAAcgD,GAmHMC,IALJ,eASU,IACV,oBAAId,UAAU,qCAAd,SACGpC,IACG,IACN,wBACEoC,UAAU,uFACVY,SAAUpD,EAAc,EAAI,EAC5B6C,QAAS,SAACC,GACRA,EAAEC,iBA5HI,WAC1B,IAAIM,EAAgBjD,EAAa,EAC7BiD,EAAgB,KAClBA,EAAgB,IAElBhD,EAAcgD,GAwHME,IALJ,kBAWF,mBAAGf,UAAU,0BAAb,SAAwCtC,OAE1C,sBAAKsC,UAAU,gCAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,qBACEgB,IAAI,kBACJhB,UAAU,wCAEXxG,EAAWf,QACV,wBACEuH,UAAU,0EACVY,SAAUpD,EAAc,EAAI,EAC5B6C,QAAS,SAACC,GACRA,EAAEC,iBACF9B,IACAmB,KANJ,SASE,oBAAII,UAAU,oCAAd,SACGxC,EAAc,OAAS,WAI5B,wBACEwC,UAAU,0EACVY,SAAUpD,EAAc,EAAI,EAC5B6C,QAAS,SAACC,GACRA,EAAEC,iBACFpG,EAASQ,KACTiF,KANJ,SASE,oBAAII,UAAU,oCAAd,uBAMN,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,sBAAd,sBACA,oBAAIA,UAAU,gCAAd,yDAOR,qBAAKA,UAAU,0BAAf,SACE,mBAAGC,KAAK,iCAAiCC,OAAO,SAAhD,SACE,oBAAIF,UAAU,wDAAd,mCCjSDiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCEdO,IAASC,OACP,cAAC,IAAD,CAAU3H,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF4H,SAASC,eAAe,SAM1BX,M","file":"static/js/main.c28948ca.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport \"animate.css\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState();\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = async () => {\n    let cost = CONFIG.WEI_COST;\n    let totalCostWei = String(cost * mintAmount);\n\n    let gasLimit;\n\n    console.log(\"Cost: \", totalCostWei);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n\n    const contractMethod = blockchain.smartContract.methods.mint(mintAmount);\n\n    let options = {\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei,\n    };\n\n    await contractMethod\n      .estimateGas(options)\n      .then((gas) => {\n        gasLimit = 1.2 * gas;\n        console.log(\"Gas Estimate: \", gas);\n        return gasLimit;\n      })\n      .catch((err) => {\n        console.log(err);\n        if (mintAmount == 1) return (gasLimit = CONFIG.GAS_LIMIT);\n        gasLimit = CONFIG.GAS_LIMIT + 100000 * (mintAmount - 1);\n        return gasLimit;\n      });\n\n    options = {\n      ...options,\n      gas: parseInt(gasLimit),\n    };\n\n    console.log(options);\n\n    contractMethod\n      .send(options)\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong. Please try again.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `${CONFIG.NFT_NAME} is now yours. Visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 20) {\n      newMintAmount = 20;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <div className=\"relative \">\n      <div className=\"absolute top-0 w-full min-h-screen md:h-screen bg-full header \">\n        <div>\n          <div className=\"top-0 w-full p-4 md:p-8\">\n            <div className=\"flex justify-between\">\n              {\" \"}\n              <a href=\"https://beholdtheocean.com\" target=\"_blank\">\n                <h1 className=\"font-semibold underline uppercase md:text-2xl\">\n                  Project Page\n                </h1>\n              </a>\n              {!blockchain.account ? (\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                    getData();\n                  }}\n                >\n                  <h1 className=\"uppercase md:text-2xl\">Connect Wallet</h1>\n                </button>\n              ) : (\n                <h1 className=\"uppercase truncate md:text-2xl\">\n                  {truncate(blockchain.account, 15)}\n                </h1>\n              )}\n              \n            </div>\n            {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n            <div className=\"flex justify-center\">\n              <div>\n                <div>\n                  <div className=\"py-4\">\n                    <a href=\"#\">\n                      <h1 className=\"block text-xl text-center uppercase md:hidden\">\n                        Art Funds Science\n                      </h1>\n                    </a>\n                    <h1\n                      className=\"text-xl font-bold text-center uppercase md:text-4xl\"\n                      style={{ textShadow: \"2px 2px rgba(0, 0, 0, 0.2)\" }}\n                    >\n                      Source\n                    </h1>\n                    <h1\n                      className=\"text-4xl font-bold tracking-widest text-center uppercase md:text-7xl\"\n                      style={{ textShadow: \"2px 2px rgba(0, 0, 0, 0.2)\" }}\n                    >\n                      Behold the ocean\n                    </h1>\n                  </div>\n                  <div className=\"py-2 md:py-4\">\n                    <h1 className=\"text-xl text-center uppercase\">\n                      Main Drop 01{\" \"}\n                    </h1>\n                    <h1 className=\"text-xl text-center uppercase\">\n                      4444 photographic ocean NFTs with rarity traits\n                    </h1>\n                  </div>\n\n                  <div className=\"flex items-center justify-center py-4 text-4xl align-middle md:py-4 \">\n                    <button\n                      className=\"w-16 h-16 p-1 mx-2 text-4xl font-bold text-white bg-black rounded-full \"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        decrementMintAmount();\n                      }}\n                    >\n                      -\n                    </button>{\" \"}\n                    <h1 className=\"mx-2 text-6xl font-bold text-white\">\n                      {mintAmount}\n                    </h1>{\" \"}\n                    <button\n                      className=\"w-16 h-16 p-1 mx-2 text-4xl font-bold text-white align-middle bg-black rounded-full \"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        incrementMintAmount();\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <p className=\"text-center text-xs p-2\">{feedback}</p>\n                </div>\n                <div className=\"flex flex-col justify-center \">\n                  <div className=\"relative flex justify-center\">\n                    <img\n                      src=\"images/mint.gif\"\n                      className=\"w-32 h-32 shadow-xl md:w-48 md:h-48\"\n                    />\n                    {blockchain.account ? (\n                      <button\n                        className=\"absolute items-center w-32 h-32 text-white align-middle md:w-48 md:h-48\"\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        <h1 className=\"text-xl font-semibold text-center\">\n                          {claimingNft ? \"BUSY\" : \"MINT\"}\n                        </h1>\n                      </button>\n                    ) : (\n                      <button\n                        className=\"absolute items-center w-32 h-32 text-white align-middle md:w-48 md:h-48\"\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        <h1 className=\"text-xl font-semibold text-center\">\n                          MINT\n                        </h1>\n                      </button>\n                    )}\n                  </div>\n                  <div className=\"py-4\">\n                    <h1 className=\"text-xl text-center\">0.07 ETH</h1>\n                    <h1 className=\"text-xl text-center uppercase\">\n                      You can mint 1-20 nfts at a time\n                    </h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex justify-end w-full\">\n              <a href=\"https://twitter.com/AvaSilvery\" target=\"_blank\">\n                <h1 className=\"text-xl font-semibold underline uppercase md:text-2xl\">\n                  Twitter\n                </h1>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}